const l={renew(e){return JSON.parse(JSON.stringify(e))},linkify(e){const t=/(\bhttps?:\/\/[^\s<>"')\]]+)/g;return e.replace(t,(r,n)=>e.includes(`<a href="${n}"`)||e.includes(`<a href='${n}'`)?r:`<a href="${n}" target="_blank" rel="noopener noreferrer">${n}</a>`)},replaceAll(e,t,r){return e.split(t).join(r)},extractText(e){return e.replace(/\*/g,"")},isNumeric(e){return!isNaN(Number(e))},isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)},generateId(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const t=Math.random()*16|0;return(e==="x"?t:t&3|8).toString(16)})},getHumanReadableDate(e){const t=new Date(e.replace(" ","T")),r=new Date,n=r.getTime()-t.getTime(),i=Math.floor(n/1e3),s=Math.floor(i/60),o=Math.floor(s/60),a=Math.floor(o/24),x=Math.floor(a/30),f=Math.floor(a/365);return isNaN(t.getTime())?"(N/A)":r.getDate()===t.getDate()&&r.getMonth()===t.getMonth()&&r.getFullYear()===t.getFullYear()?"오늘":o<=24?"하루 전":a<30?`${a}일 전`:x<12?`${x}개월 전`:`${f}년 전`}};export{l as c};
